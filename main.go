package main

import (
	"bufio"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"os"
)

var numericKeyboard = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("1"),
		tgbotapi.NewKeyboardButton("2"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("4"),
		tgbotapi.NewKeyboardButton("5"),
	),
)

var numericKeyboard2 = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("fmt.Scan(a)"),
		tgbotapi.NewKeyboardButton("a = input()"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("fmt.Scan(&a)"),
		tgbotapi.NewKeyboardButton("fmt.Println(a)"),
	),
)
var numericKeyboard3 = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("10"),
		tgbotapi.NewKeyboardButton("9"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("80"),
		tgbotapi.NewKeyboardButton("8"),
	),
)

var numericKeyboard4 = tgbotapi.NewReplyKeyboard(
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–°–æ–ª–Ω—Ü–µ"),
		tgbotapi.NewKeyboardButton("–ü–æ–ª—è—Ä–Ω–∞—è –∑–≤–µ–∑–¥–∞"),
	),
	tgbotapi.NewKeyboardButtonRow(
		tgbotapi.NewKeyboardButton("–°–∏—Ä–∏—É—Å"),
		tgbotapi.NewKeyboardButton("–ê–ª—å—Ñ–∞ –¶–µ–Ω—Ç–∞–≤—Ä–∞"),
	),
)

func main() {
	bot, err := tgbotapi.NewBotAPI(mustToken())
	if err != nil {
		log.Panicf("Token not found")
	}

	bot.Debug = true

	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil { // ignore non-Message updates
			continue
		}

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)

		switch update.Message.Text {
		case "/start":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Çüëã\n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö, –≤ –Ω–µ–º —è —Å–æ–∑–¥–∞–ª –º–∏–Ω–∏-–∏–≥—Ä—É. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ 'game'")
		case "game", "Game", "GAME":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 2+2=")
			msg.ReplyMarkup = numericKeyboard
		case "4":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n\n–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å: –ö–∞–∫ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π 'a' –≤ golang?")
			msg.ReplyMarkup = numericKeyboard2
		case "fmt.Scan(&a)":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n\n–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å: –°–∫–æ–ª—å–∫–æ –Ω–æ–≥ —É –ø–∞—É–∫–∞?")
			msg.ReplyMarkup = numericKeyboard3
		case "8":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n\n–ò –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å: –ö–∞–∫–∞—è –∑–≤–µ–¥–∞ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –∫ –∑–µ–º–ª–µ?")
			msg.ReplyMarkup = numericKeyboard4
		case "–°–æ–ª–Ω—Ü–µ":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n\nC–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è‚ò∫Ô∏è")
			msg.ReplyMarkup = tgbotapi.NewRemoveKeyboard(true)
		case "1", "2", "5", "fmt.Scan(a)", "a = input()", "fmt.Println(a)", "10", "9", "80", "–ü–æ–ª—è—Ä–Ω–∞—è –∑–≤–µ–∑–¥–∞", "–°–∏—Ä–∏—É—Å", "–ê–ª—å—Ñ–∞ –¶–µ–Ω—Ç–∞–≤—Ä–∞":
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–≠—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ \U0001FAE3")
		default:
			msg = tgbotapi.NewMessage(update.Message.Chat.ID, "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤–≤–µ–¥–∏ —Å–ª–æ–≤–æ 'game'")
		}

		if _, err := bot.Send(msg); err != nil {
			log.Panic(err)
		}
	}
}

func mustToken() string {
	file, err := os.Open("tokenTelegram")
	// –ù–µ–æ–±—Ö–æ–¥–∏–º —Ñ–∞–π–ª tokenTelegram —Å —Ç–æ–∫–∏–Ω–æ–º –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞
	if err != nil {
		log.Panicf("File tokenTelegram not found")
	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	scanner.Scan()
	return scanner.Text()
}
